spring.application.name=Rinha Backend 2025

server.port=${SERVER_PORT:9999}
spring.threads.virtual.enabled=true

# ==============================
# Payment API Settings
# ==============================
payment.api.summary-delay.ms=${PAYMENT_API_SUMMARY_DELAY:50}
payment.api.async-input=${PAYMENT_API_ASYNC_INPUT:false}

# ==============================
# Payment Processor - Default Client Settings
# ==============================
payment.processor.default.url=${DEFAULT_PAYMENT_PROCESSOR_URL:http://127.0.0.1:8001}
payment.processor.default.connect-timeout=${DEFAULT_PAYMENT_PROCESSOR_CONNECT_TIMEOUT:5000ms}
payment.processor.default.read-timeout=${DEFAULT_PAYMENT_PROCESSOR_READ_TIMEOUT:10000ms}

# ==============================
# Payment Processor - Fallback Client Settings
# ==============================
payment.processor.fallback.url=${FALLBACK_PAYMENT_PROCESSOR_URL:http://127.0.0.1:8002}
payment.processor.fallback.connect-timeout=${FALLBACK_PAYMENT_PROCESSOR_CONNECT_TIMEOUT:5000ms}
payment.processor.fallback.read-timeout=${FALLBACK_PAYMENT_PROCESSOR_READ_TIMEOUT:10000ms}

# ==============================
# Database Connection Settings
# ==============================
spring.datasource.url=${DB_URL:jdbc:postgresql://localhost:5432/rinha_2025?stringtype=unspecified}
spring.datasource.username=${DB_USERNAME:postgres}
spring.datasource.password=${DB_PASSWORD:postgres}

# ==============================
# Database Connection Pool Settings
# ==============================
spring.datasource.hikari.minimum-idle=${DB_POOL_MINIMUM_SIZE:10}
spring.datasource.hikari.maximum-pool-size=${DB_POOL_MAXIMUM_SIZE:20}
spring.datasource.hikari.idle-timeout=${DB_POOL_IDLE_TIMEOUT:60000}

# ==============================
# Payment Processor Settings - ok
# ==============================
payment-processor.max-quantity=${PAYMENT_PROCESSOR_MAX_QUANTITY:-1}
payment-processor.thread-pool.size=${PAYMENT_PROCESSOR_THREAD_POOL_SIZE:1}
payment-processor.thread-interval-execution.ms=${PAYMENT_PROCESSOR_THREAD_INTERVAL_EXECUTION_MS:-1}

# ==============================
# Payment Processor - Concurrency Settings - ok
#   sequential -> one by one
#   parallel -> all at the same time (using thread system)
#   parallel_vt -> all at the same time (using virtual threads)
#   parallel_vt_no_wait -> all at the same time (using virtual threads) without waiting
# ==============================
payment-processor.concurrency.type=${PAYMENT_PROCESSOR_CONCURRENCY_TYPE:parallel_vt_no_wait}

# ==============================
# Payment Confirmation Settings - ok
# ==============================
payment-confirmation.max-quantity=${PAYMENT_CONFIRMATION_MAX_QUANTITY:-1}
payment-confirmation.thread-pool.size=${PAYMENT_CONFIRMATION_THREAD_POOL_SIZE:4}
payment-confirmation.thread-interval-execution.ms=${PAYMENT_CONFIRMATION_THREAD_INTERVAL_EXECUTION_MS:-1}
payment-confirmation.persistence.copy-threshold=${PAYMENT_CONFIRMATION_PERSISTENCE_COPY_THRESHOLD:500}

payment-confirmation.number-of-retries=${PAYMENT_CONFIRMATION_NUMBER_OF_RETRIES:3}
payment-confirmation.interval-retries-execution.ms=${PAYMENT_CONFIRMATION_INTERVAL_RETRIES_EXECUTION_MS:30}


# ==============================
# Health Check - Execution Settings - ok
# ==============================
health-check-execution.scheduler.initial-delay.ms=${HEALTH_CHECK_EXECUTION_SCHEDULER_INITIAL_DELAY_MS:1000}
health-check-execution.scheduler.interval.ms=${HEALTH_CHECK_EXECUTION_SCHEDULER_INTERVAL_MS:500}

# ==============================
# Health Check - Update cache Settings - ok
# ==============================
health-check-cache.scheduler.initial-delay.ms=${HEALTH_CHECK_CACHE_SCHEDULER_INITIAL_DELAY_MS:1000}
health-check-cache.scheduler.interval.ms=${HEALTH_CHECK_CACHE_SCHEDULER_INTERVAL_MS:1000}

# ==============================
# PaymentProcessor selection settings - ok
# ==============================
payment-processor-selection.scheduler.initial-delay.ms=${PAYMENT_PROCESSOR_SELECTION_SCHEDULER_INITIAL_DELAY_MS:3000}
payment-processor-selection.scheduler.interval.ms=${PAYMENT_PROCESSOR_SELECTION_SCHEDULER_INTERVAL_MS:300}
payment-processor-selection.default.advantage=${PAYMENT_PROCESSOR_SELECTION_DEFAULT_ADVANTAGE:0.1}
payment-processor-selection.fallback.enabled=${PAYMENT_PROCESSOR_SELECTION_FALLBACK_ENABLED:true}