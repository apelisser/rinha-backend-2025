spring.application.name=Rinha Backend 2025

server.port=${SERVER_PORT:8080}
spring.threads.virtual.enabled=true

# ==============================
# Payment API Settings
# ==============================
payment.api.summary-delay.ms=${PAYMENT_API_SUMMARY_DELAY:50}

# ==============================
# Payment Processor - Default Client Settings
# ==============================
payment.processor.default.url=${DEFAULT_PAYMENT_PROCESSOR_URL:http://127.0.0.1:8001}
payment.processor.default.connect-timeout=${DEFAULT_PAYMENT_PROCESSOR_CONNECT_TIMEOUT:200ms}
payment.processor.default.read-timeout=${DEFAULT_PAYMENT_PROCESSOR_READ_TIMEOUT:600ms}

# ==============================
# Payment Processor - Fallback Client Settings
# ==============================
payment.processor.fallback.url=${FALLBACK_PAYMENT_PROCESSOR_URL:http://127.0.0.1:8002}
payment.processor.fallback.connect-timeout=${FALLBACK_PAYMENT_PROCESSOR_CONNECT_TIMEOUT:300ms}
payment.processor.fallback.read-timeout=${FALLBACK_PAYMENT_PROCESSOR_READ_TIMEOUT:1200ms}

# ==============================
# Database Connection Settings
# ==============================
spring.datasource.url=${DB_URL:jdbc:postgresql://localhost:5432/rinha_2025?stringtype=unspecified}
spring.datasource.username=${DB_USERNAME:postgres}
spring.datasource.password=${DB_PASSWORD:postgres}

# ==============================
# Database Connection Pool Settings
# ==============================
spring.datasource.hikari.minimum-idle=${DB_POOL_MINIMUM_SIZE:10}
spring.datasource.hikari.maximum-pool-size=${DB_POOL_MAXIMUM_SIZE:20}
spring.datasource.hikari.idle-timeout=${DB_POOL_IDLE_TIMEOUT:60000}

# ==============================
# Outbox Processor Settings
# ==============================
outbox-processor.pull.max-amount=${OUTBOX_PROCESSOR_PULL_MAX_AMOUNT:15}
outbox-processor.scheduler.interval.ms=${OUTBOX_PROCESSOR_SCHEDULER_INTERVAL_MS:500}
outbox-processor.scheduler.initial-delay.ms=${OUTBOX_PROCESSOR_SCHEDULER_INITIAL_DELAY_MS:5000}

# ==============================
# Outbox Cleaner Settings
# ==============================
outbox-cleaner.scheduler.interval.ms=${OUTBOX_CLEANER_SCHEDULER_INTERVAL_MS:10000}
outbox-cleaner.scheduler.initial-delay.ms=${OUTBOX_CLEANER_SCHEDULER_INITIAL_DELAY_MS:5000}

# ==============================
# Payment Processor Concurrency Settings
#   sequential -> one by one
#   parallel -> all at the same time (using thread system)
#   parallel_vt -> all at the same time (using virtual threads)
#   parallel_vt_no_wait -> all at the same time (using virtual threads) without waiting
# ==============================
payment-processor.concurrency.type=${PAYMENT_PROCESSOR_CONCURRENCY_TYPE:parallel_vt}

# ==============================
# Health Check - Execution Settings
# ==============================
health-check-execution.scheduler.initial-delay.ms=${HEALTH_CHECK_EXECUTION_SCHEDULER_INITIAL_DELAY_MS:3000}
health-check-execution.scheduler.interval.ms=${HEALTH_CHECK_EXECUTION_SCHEDULER_INTERVAL_MS:500}

# ==============================
# Health Check - Update cache Settings
# ==============================
health-check-cache.scheduler.initial-delay.ms=${HEALTH_CHECK_CACHE_SCHEDULER_INITIAL_DELAY_MS:3000}
health-check-cache.scheduler.interval.ms=${HEALTH_CHECK_CACHE_SCHEDULER_INTERVAL_MS:1000}

# ==============================
# PaymentProcessor selection settings
# ==============================
payment-processor-selection.scheduler.initial-delay.ms=${PAYMENT_PROCESSOR_SELECTION_SCHEDULER_INITIAL_DELAY_MS:3000}
payment-processor-selection.scheduler.interval.ms=${PAYMENT_PROCESSOR_SELECTION_SCHEDULER_INTERVAL_MS:1000}
payment-processor-selection.default.advantage=${PAYMENT_PROCESSOR_SELECTION_DEFAULT_ADVANTAGE:0.1}